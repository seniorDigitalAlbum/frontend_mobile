name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ] 
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: |
          npm ci
          
      - name: Build web
        run: |
          export EXPO_PLATFORM=web
          export NODE_ENV=production
          export EXPO_PUBLIC_API_BASE_URL_PROD=https://dearmind-backend-837765001467.asia-northeast3.run.app
          npx expo export --platform web
          
      - name: Copy assets
        run: |
          cp -r assets/* dist/assets/
          # .nojekyll 파일 생성
          touch dist/.nojekyll
          
      - name: Fix paths for GitHub Pages
        run: |
          # HTML 파일의 정적 리소스 경로 수정
          sed -i 's|/_expo/static/|/frontend_mobile/_expo/static/|g' dist/index.html
          sed -i 's|/favicon.ico|/frontend_mobile/favicon.ico|g' dist/index.html
          
          # CSP 정책 업데이트 - Google Fonts 허용
          sed -i 's|default-src '\''none'\''|default-src '\''self'\''; script-src '\''self'\'' '\''unsafe-inline'\'' '\''unsafe-eval'\'' https://cdn.tailwindcss.com https://cdn.jsdelivr.net; style-src '\''self'\'' '\''unsafe-inline'\'' https://fonts.googleapis.com https://cdn.jsdelivr.net; style-src-elem '\''self'\'' '\''unsafe-inline'\'' https://fonts.googleapis.com https://cdn.jsdelivr.net; font-src '\''self'\'' https://fonts.gstatic.com https://cdn.jsdelivr.net; img-src '\''self'\'' data: https:; connect-src '\''self'\'' https:;|g' dist/index.html
          
          # 모든 정적 파일 경로를 /frontend_mobile/로 수정
          find dist -name "*.js" -exec sed -i 's|/assets/|/frontend_mobile/assets/|g' {} \;
          find dist -name "*.css" -exec sed -i 's|/assets/|/frontend_mobile/assets/|g' {} \;
          
          # HTML 파일에서 절대 경로만 수정 (상대 경로는 그대로 두기)
          find dist -name "*.html" -exec sed -i 's|href="/[^f]|href="/frontend_mobile/|g' {} \;
          find dist -name "*.html" -exec sed -i 's|src="/[^f]|src="/frontend_mobile/|g' {} \;
          
          # 이미 /frontend_mobile/로 시작하는 경로는 중복 수정하지 않도록 제외
          find dist -name "*.html" -exec sed -i 's|href="/frontend_mobile/frontend_mobile/|href="/frontend_mobile/|g' {} \;
          find dist -name "*.html" -exec sed -i 's|src="/frontend_mobile/frontend_mobile/|src="/frontend_mobile/|g' {} \;
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
